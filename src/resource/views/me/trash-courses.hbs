<div class="container mt-4">
    <div class="mb-4">
      <a href="/me/stored/courses?page=1" class="fs-5 d-flex mb-4">
        <svg class="mx-2" xmlns="http://www.w3.org/2000/svg" width="30px" height="30px" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
        <path stroke-linecap="round" stroke-linejoin="round" d="M9 15L3 9m0 0l6-6M3 9h12a6 6 0 010 12h-3" />
        </svg>
        Danh sách khóa học
      </a>
      <h2>Khóa học đã xóa gần đây</h2>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th scope="col">Tên khóa học</th>
                <th scope="col">Mô tả khóa học</th>
                <th scope="col" colspan="2">Thời gian tạo</th>
            </tr>
        </thead>
        <tbody>
            {{#each currentCourses}}
                <tr>
                    <td>{{this.name}}</td>
                    <td>{{this.title}}</td>
                    <td>{{this.createdAt}}</td>
                    <td>
                        <a href="" class="btn btn-link btn-restore" data-bs-id="{{this._id}}">Khôi phục</a>
                        <a href="" class="btn btn-link" data-bs-toggle="modal" data-bs-target="#exampleModal" data-bs-id="{{this._id}}">Xóa vĩnh viễn</a>
                    </td>
                </tr>
            {{/each}}
        </tbody>
    </table>
    {{#unless currentCourses}}
            <p style="text-align: center;">Thùng rác trống
            </p>
    {{/unless}}
</div>

{{!-- MODAL --}}
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel">Xóa khóa học</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        Bạn có chắc muốn xóa khóa học này không ?
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-danger delete-btn">Xóa</button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
      </div>
    </div>
  </div>
</div>

{{!-- Form Delete --}}
<form method="POST" id="form-delete-submit"></form>
<form method="POST" id="form-restore-submit"></form>

{{!-- Pagination --}}
<nav aria-label="Page navigation example">
    <div class="d-flex justify-content-center">
        <ul class="pagination">
           {{#if currentCourses}}
              <li class="page-item">
                <a class="page-link previous" href="" aria-label="Previous">
                  <span aria-hidden="true">&laquo;</span>
                </a>
              </li>
              {{#getPage countPage}}
                      <li class="page-item"><a class="page-link number" href="">{{sum this 1}}</a></li>
              {{/getPage}}
              <a class="page-link next" href="" aria-label="Next">
                  <span aria-hidden="true">&raquo;</span>
              </a>
            {{/if}}
          </li>
      </ul>
    </div>
</nav>
<script>

    //Handle DeleteCourse
    const exampleModal = document.getElementById('exampleModal')
    const deleteBtn = document.querySelector(".delete-btn")
    const formDelete = document.getElementById("form-delete-submit")
    const formRestore = document.getElementById("form-restore-submit")
    const restoreBtn = document.querySelectorAll(".btn-restore")
    var courseId
  
    if (exampleModal) { 
        exampleModal.addEventListener('show.bs.modal', event => {
        const button = event.relatedTarget
        courseId = button.getAttribute('data-bs-id')
        deleteBtn.setAttribute("disabled", "true")
        setTimeout(() => {
          deleteBtn.removeAttribute("disabled")
        }, 3000)
    })
    
    deleteBtn.addEventListener('click', function() {
        formDelete.setAttribute("action", `/courses/${courseId}/force?_method=DELETE`)
        formDelete.submit()
    })
    
    //Handle Restore
    restoreBtn.forEach(item => {
        item.addEventListener("click", function(e) {
            e.preventDefault()
            courseId = item.getAttribute("data-bs-id")
            console.log(courseId)
            formRestore.setAttribute("action", `/courses/${courseId}/restore?_method=PATCH`)
            formRestore.submit()
        })
    })

    //Handle PAGINATION
    const pageLinkNumber = document.querySelectorAll(".page-link.number")
    const previousBtn = document.querySelector(".previous")
    const nextBtn = document.querySelector(".next")
    var currentPage
    //PREIVOUSE BTN
    previousBtn.addEventListener('click' , function() {
      if({{page}} == 1)
        return
      currentPage = {{page}}  - 1
      previousBtn.setAttribute("href", `/me/trash/courses?page=${currentPage}`)
    })
    //NETX BTN
    nextBtn.addEventListener('click' , function() {
      if({{page}} == {{countPage}})
        return
      currentPage = {{page}}  + 1
      nextBtn.setAttribute("href", `/me/trash/courses?page=${currentPage}`)
    })

    pageLinkNumber.forEach(item => {
      item.addEventListener('click', function(){
        item.setAttribute("href", `/me/trash/courses?page=${item.innerText}`)
      })
    })

     pageLinkNumber.forEach(item => {
      if(item.innerText == {{page}})
          item.closest(".page-item").classList.add("active")
     })
}
</script>